package com.isuwang.soa.hello;

      import com.isuwang.dapeng.core.*;
      import com.isuwang.org.apache.thrift.*;
      import java.util.ServiceLoader;
      import com.isuwang.soa.hello.HelloServiceCodec.*;
      import com.isuwang.soa.hello.service.HelloService;

      /**
       * Autogenerated by Dapeng-Code-Generator (1.2.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated

      **/
      public class HelloServiceClient implements HelloService{
        private final String serviceName;
        private final String version;

        private SoaConnectionPool pool;

      public HelloServiceClient() {
        this.serviceName = "com.isuwang.soa.hello.service.HelloService";
        this.version = "1.0.0";

        ServiceLoader<SoaConnectionPoolFactory> factories = ServiceLoader.load(SoaConnectionPoolFactory.class);
        for (SoaConnectionPoolFactory factory: factories) {
          this.pool = factory.getPool();
          break;
        }
        this.pool.registerClientInfo(serviceName,version);
      }

      
        
       /**
       * 
       **/
          
            public String sayHello(com.isuwang.soa.hello.domain.Hello hello) throws SoaException{

              String methodName = "sayHello";

              sayHello_args sayHello_args = new sayHello_args();
              sayHello_args.setHello(hello);
                

              sayHello_result response = pool.send(serviceName,version,"sayHello",sayHello_args, new SayHello_argsSerializer(), new SayHello_resultSerializer());

              
                  
                      return response.getSuccess();
                    
                
          }
          
        

        
        
       /**
       * 
       **/
          
            public void test(String content) throws SoaException{

              String methodName = "test";

              test_args test_args = new test_args();
              test_args.setContent(content);
                

              test_result response = pool.send(serviceName,version,"test",test_args, new Test_argsSerializer(), new Test_resultSerializer());

              
                  
                
          }
          
        

        

      /**
      * getServiceMetadata
      **/
      public String getServiceMetadata() throws SoaException {
        String methodName = "getServiceMetadata";
          getServiceMetadata_args getServiceMetadata_args = new getServiceMetadata_args();
          getServiceMetadata_result response = pool.send(serviceName,version,methodName,getServiceMetadata_args, new GetServiceMetadata_argsSerializer(), new GetServiceMetadata_resultSerializer());
          return response.getSuccess();
      }

      }
    